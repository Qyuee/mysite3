<?xml version="1.0" encoding="UTF-8"?>
<!-- 디스패처 서블릿의 최초요청 시 즉, init()실행시 web.xml의 servlet-name에 따라 '-servlet.xml'을 
	붙힌 후 컨테이너에서 아래의 명세에 따라 객체를 생성한다. -->
<!-- 아래의 명세에서 bean을 설정해야 컨테이너가 객체를 생성할 수 있다. -->
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- validator, conversionService, messageConverter를 자동으로 등록 -->
	<mvc:annotation-driven />

	<!-- 서블릿 컨테이너의 디폴트 서블릿 위임 핸들러 -->
	<mvc:default-servlet-handler />

	<!--@을 가지고 있는 어노테이션을 기준으로 찾는다. -->
	<!-- 빈 설정을 어노테이션 기반으로 한다. -->
	<context:annotation-config />

	<!--해당 경로에 있는 class를 탐색한다. 스캐닝을 할 기준을 설정한다. -->
	<context:component-scan base-package="com.cafe24.mysite.controller" />
	<context:component-scan base-package="com.cafe24.mysite.exception" />

	<!-- viewResolver 설정 -->
	<!-- 자동 빈 설정이 아닌 이유는 viewResolver의 설정을 바꿔서 사용하기 위함이다. 여러 종류의 viewResolver 존재 -->
	<bean id='viewResolver'
		class='org.springframework.web.servlet.view.InternalResourceViewResolver'>
		<property name='viewClass' value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" /> 
		<property name="order" value="1" />  <!-- 여러개의 viewResolver가 있을 때 순서를 정한다. -->
	</bean>
</beans>